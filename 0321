트리의 특징 모두 갖고 있으면서 모든 정점 연결하는 -> 신장트리
: 간선의 개수 최소화
  모든 정점 연결하는 방법
  - 여러가지 방법 있다
  - 싸이클 발생하지 않음
  - 간선의 개수 : (V-1)개

최소 비용 신장 트리
: 그 중에 비용의 합이 제일 적은 신장트리

완전탐색 -> 백트래킹, DP, 그리디... 순으로 고려
- 제일 작은 것 부터
- 특정 노드 시작으로 갈 수 있는 곳들 중 작은 곳만 

prim 알고리즘
- 하나의 정점에서 연결된 간선 중 하나씩 선택하면서 MST만드는 방식 
    - 임의 정점 하나 선택해서 시작
    - 선택한 정점 중 최소비용 간선이 존재하는 정점 선택
    - 모든 정점이 선택될 때 까지 1,2번 과정 반복
- 서로소인 2개의 집합 정보를 유지
    - 트리 정점 : MST 만들기 위해 선택된 정점들
    - 비트리 정점 : 선택 되지 않은 정점

kruskal 알고리즘- 간선을 하나씩 선택해서 MST찾는 알고리즘
- 최초, 모든 간선을 가중치에 따라 오름차순 정렬
- 가중치가 낮은 간선부터 선택하면서 트리 증가시킴
    - 사이클 존재하면 다음으로 가중치가 낮은 간선 선택
- n-1개의 간선이 선택될 때까지 2번 반복


최단경로 : 간선의 가중치가 있는 그래프에서 두 정점 사이의 경로들 중에 간선의 가중치의 합이 최소인 경로
- 하나의 시작 정점에서 끝 정점까지 최단경로
    - 다익스트라 알고리즘
    - 음의 가중치 허용치 않음
- 벨만-포드 알고리즘 
    - 음의 가중치 허용

모든 정점들에 대한 최단경로
 - 플로이드-워샬 알고리즘

 다익스트라 알고리즘
 - 시작 정점에서 거리가 최소인 정점 선택해 나가면서 최단 경로 구하는 방식
 - 시작 정점에서 끝정점까지의 최단 경로에 정점 x가 존재
 - 이때 최단경로는 s에서x까지의 최단경로와 x에서 t까지의 최단경로로 구성
 - 탐욕기법 사용한 알고리즘으로 MST의 프림알고리즘과 유사하다.
