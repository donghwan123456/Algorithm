그래프 : 노드+간선으로 이루어진 자료구조
        데이터간 관계를 표시하기 위해 ''
        선형 자료구조나 트리 자료구조로 표현하기 어려운 N:N관계 가지는 원소들 표현하기 유리
        유형
            : 무향 그래프
            : 유향 그래프
            : 가중치 그래프
            : 사이클 없는 방향 그래프
            : 완전 그래프
            : 부분 그래프
    그래프 표현:
        간선의 정보 저장하는 방식, 메모리, 성능 고려해서 결정
        인접 행렬 : 2차원배열 이용해서 간선정보 저장, 배열의 배열
        인접리스트 : 각 정점마다 해당 정점으로 나가는 간선의 정보 저장
        간선의 배열 : 간선을 배열에 연속적으로 저장
    
    인접행렬 :
        두 정점을 연결하는 간선의 유무를 행렬로 표현
            - 정방 행렬
            - 행 번호와 열 번호는 그래프의 정점에 대응
            - 두 정점이 인접되어 있으면1 아니면 0으로 표현
            - 무향 그래프 : i번째 행 합 = i번째 열 합 = Vi의 차수
            - 유향 그래프 : 행i의 합 = Vi의 진출 차수


    인접 리스트:
     장점 : v개의 노드가 갈 수 있는 정보만 저장
         - 메모리 사용량 적다
         - 탐색할 때 갈 수 있는 고만 확인하기에 시간적으로 효율
     단점 : 
         - 특정 노드간 연결 여부 확인하는데 시간 걸림 
    
    그래프 순회 - 그래프로 표현된 모든 자료(정점)를 빠짐없이 탐색하는 것
        - 깊이 우선 탐색 DFS
            : 시작 정점 한 방향으로 갈 수 있는 경로가 있는 곳까지 탐색해 가다가
              더이상 갈 곳 없으면 가장 마지막에 만난 갈림길 간선 있는 정점으로 돌아와
              다른 방향 정점으로 탐색 계속 반복해 모든 정점 방문하는 순회방법
            : 가장 마지막에 만난 갈림길 정점으로 되돌아가 깊이 우선탐색 하므로
              후입선출 구조 스택 사용

        - 너비 우선 탐색 BFS
            : 탐색 시작점의 인접한 정점 모두 차례로 방문 후, 방문했던 정점 
              시작점으로 하여 다시 인접한 정점 차례로 방문
            : 인접한 정점 탐색 후 차례로 너비 우선 탐색 하므로 선입선출 형태 큐 활용
    서로소 집합
        - 서로 중복 포함된 원소가 없는 집합들
        - 집합에 속한 특정 멤버를 통해 각 집합들 구분, 이를 대표자라함
      상호배타집합 표현 방법:
        - 연결리스트, 트리
            :연결리스트
                - 각 집합 원소들은 하나의 연결리스트로 관리
                - 연결리스트 맨 앞 원소를 집합의 대표 원소로 삼음
                - 각 원소는 집합의 대표원소 가리키는 링크 가짐
            : 트리
                - 자식노드가 부모 노드 가리키며 루트 노드가 대표자가 됨
        - 생호배타집합에 대한 연산
            : Rank이용한 Union
                각 노드는 자신을 루트로 하는 subtree의 높이를 rank라는 이름으로 저장
                두 집합합칠 때 rank가 낮은 집합을 rank가 높은 집합에 붙인다
            : path compression
                - Find set 행하는 과정에서 모든 노드들이 직접root 가리키도록 포인터 바꿔줌
             


